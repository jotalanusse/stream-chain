syntax = "proto3";
package klyraprotocol.names;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "klyraprotocol/names/name.proto";

option go_package = "github.com/StreamFinance-Protocol/stream-chain/protocol/x/names/types";

// Query defines the gRPC querier service.
service Query {
  // Queries a Name by id.
  rpc Name(QueryNameRequest) returns (QueryNameResponse) {
    option (google.api.http).get = "/klyraprotocol/names/name/{id}";
  }

  // Queries a list of Name items.
  rpc AllNames(QueryAllNamesRequest) returns (QueryAllNamesResponse) {
    option (google.api.http).get = "/klyraprotocol/names/name";
  }
}

// Queries a Name by id.
message QueryNameRequest { uint32 id = 1; }

// QueryNameResponse is response type for the Name RPC method.
message QueryNameResponse { Name name = 1 [ (gogoproto.nullable) = false ]; }

// Queries a list of Name items.
message QueryAllNamesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllNamesResponse is response type for the AllNames RPC method.
message QueryAllNamesResponse {
  repeated Name name = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
